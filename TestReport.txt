有两种基本方法可以用来标识测试用例，即功能测试（黑盒测试）和结构测试（白盒测试）。本次测试我主要采用了功能测试。  
功能测试的基本观点是，任何程序都可以看作是将输入定义域取值映射到输出值域的函数。
1.测试用例
测试用例是为了特定目的（如考察特定程序路径或验证是否符合特定的需求）而设计的测试数据及与之相关的测试规程的一个特定的集合，或称为有效地发现软件缺陷的最小测试执行单元。  
根据上一节给出的测试要点，又因为测试是不可能穷举的。所以我们采用等价划分法来进行对图书管理系统的测试。它将不能穷举的测试过程进行合理分类，从而保证设计出来的测试用例具有代表性和完整性。
字段名称	描述
标识符	C1
测试项	主模块中的“系统”菜单栏，“业务”菜单栏的功能测试
输入标准	1.打开主模块，没有任何输入字符，点击相应的菜单栏项目。 
2.在数据库文件缺少的情况下，打开主模块。
输出标准	1.模块未做任何操作，单击“系统”|“退出”命令，能正常退出，无提示信息。  
2.在打开相应的子窗体时，未做任何操作，单击“系统”|“退出”命令， 能正常退出，无提示信息。  
3.在打开相应的子窗体时，做相关的增删或修改操作，未保存，单击“系统”|“退出”命令，提示“修改信息未保存，保存修改吗？”单击“Yes”，保存修改，正常退出，单击“No”,不保存修改，并退出

2.2借阅模块测试用例
字段名称	描述
标识符	C2
测试项	节约模块功能测试
输入标准	1.打开借阅模块，没有任何输入字符，点击相应的项目。  
2.输入一些正确的学号、图书号、借阅号，点击“登记”。 
3.输入一些非法的学号、图书号、借阅号，点击“登记”。
输出标准	1.模块未做任何操作，单击 “退出”命令，能正常退出，无提示信息。  
2.在打开借阅模块，做相关的“借出”操作，未保存，单击 “退出”命令，提示“修改信息未保存，保存修改吗？”单击“Yes”，保存修改，正常退出，单击“No”,不保存修改，并退出。
2.3学生查询模块测试用例
字段描述	描述
标识符	C3
测试项	学生查询模块的功能测试
输入标准	1.打开学生查询模块，没有任何输入字符，点击相应的项目。 
2.输入一些正确的学号、姓名，点击“确定”。  3.输入一些非法的学号、姓名，点击“确定”。  4.在选择“按姓名查询”单选时，输入学号，点击“确定”。 
5.在选择“按学号查询”单选时，输入姓名，点击“确定”。
输出标准	1.模块未做任何操作，单击 “退出”命令，能正常退出，无提示信息。
2.4图书查询模块测试用例
字段名称	描述
标识符	C4
测试项	图书查询模块的功能测试
输入标准	1.打开图书查询模块，没有任何输入字符，点击相应的项目。 
2.输入一些正确的书名、作者、出版社，点击“确定”。  
3.输入一些非法的书名、作者、出版社，点击“确定”。  
4.在选择“按书名查询”单选时，输入作者或出版社，点击“确定”。 
5.在选择“按作者查询”单选时，输入书名或出版社，点击“确定”。 
6.在选择“按出版社查询”单选时，输入书名或作者，点击“确定”。
输出标准	1.模块未做任何操作，单击 “退出”命令，能正常退出，无提示信息。

2.5图书归还模块测试用例
字段名称	描述
标识符	C5
测试项	图书归还模块的功能测试
输入标准	1.打开归还模块，没有任何输入字符，点击相应的项目。  
2.输入一些正确的学号、图书号，点击“登记”。 3.输入一些非法的学号、图书号，点击“登记”。
输出标准	1.模块未做任何操作，单击 “退出”命令，能正常退出，无提示信息。  
2.在打开借阅模块，做相关的“借出”操作，未保存，单击 “退出”命令，提示“修改信息未保存，保存修改吗？”单击“Yes”，保存修改，正常退出，单击“No”,不保存修改，并退出。

2.测试结果及评论
3.1测试的结果
标识符	C1
测试结果	正常操作无任何异常处理出现
与预期的偏差	无
说明的问题	主模块通过了功能测试

标识符	C2
测试结果	正常操作无任何异常处理出现 
与预期的偏差	无
说明的问题	图书借阅模块通过了测试


标识符	C3
测试结果	单选“按姓名查询”时，输入学生学号也能查询到学生的相关信息。 
在单选“按学号查询”时，输入学生姓名也能查询到学生的相关信息。
与预期的偏差	应该在单选按“姓名”或“学号”查，只能通过选中的方式查询学生的相关信息。
说明的问题	学生查询模块的借阅功能有待改进

标识符	C4
测试结果	正常操作无任何异常处理出现 
与预期的偏差	无
说明的问题	图书查询模块通过了功能测试 

标识符	C5
测试结果	正常操作无任何异常处理出现
与预期的偏差	无
说明的问题	图书归还模块通过了功能测试 

3.2缺陷分析及改进
缺陷发现效率 ＝ 缺陷总数/执行测试用时 ＝ 1/3(天)  = 0.33 /天
用例质量 ＝ 缺陷总数/测试用例总数 ×100％ = 1/5 ×100％ = 20%
缺陷改进：在测试用例C3中，发现的缺陷，通过对相关功能编码的改进，已经使测试的结果和预期达到的效果一致。
3.3测试结论
1． 测试目标完成  
2． 测试已经通过   
3． 可以进入下一阶段项目目标 
